{"version":3,"sources":["customTheme.js","widget/Header.js","widgetActions.js","widget/Content.js","widgetReducer.js","App.js","serviceWorker.js","index.js"],"names":["customTheme","theme","fonts","body","heading","mono","colors","brand","900","800","700","CustomRadio","React","forwardRef","props","ref","isChecked","isDisabled","children","rest","Button","variantColor","aria-checked","role","cursor","mt","CustomSelect","value","onChange","Select","size","ml","rounded","variant","placeholder","w","backgroundColor","borderColor","color","_active","bg","_hover","_focus","Header","useContext","AppContext","state","dispatch","selectedMarket","altsCategory","usdCategory","showColumn","orderBy","searchValue","Flex","flexDirection","alignItems","flexWrap","RadioButtonGroup","event","type","payload","isInline","mr","Icon","name","persist","target","map","el","key","RadioGroup","includes","Radio","fontFamily","InputGroup","Input","e","textTransform","width","focusBorderColor","outline","border","onClick","CustomIconButton","IconButton","aria-label","icon","isRound","Content","filteredData","favouriteList","orderDirection","handleChangeOrderBy","handleChangeOrderDirection","Stack","SimpleGrid","columns","spacing","justifyContent","my","Text","i","changeValue","o","c","toFixed","isFavourite","find","fav","s","Fragment","Divider","textAlign","handleAddToFavourite","fontSize","b","q","qv","initialState","products","undefined","sortedData","websocketIsAlive","widgetReducer","action","incomingData","newProducts","data","length","sortAndFilterData","filterData","favList","filter","push","sortData","array","toLowerCase","newArray","sort","a","changeA","changeB","createContext","App","webSocket","useRef","useReducer","connect","current","WebSocket","onopen","console","log","onmessage","message","JSON","parse","onclose","reason","onerror","err","error","close","closeWebSocket","useEffect","fetch","then","res","json","catch","mockData","pm","selectData","ThemeProvider","Provider","Box","mx","align","Heading","as","leftIcon","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e45224a9.chunk.js","sourcesContent":["import { theme } from '@chakra-ui/core';\n\n// Let's say you want to add custom colors\nconst customTheme = {\n  ...theme,\n  fonts: {\n    body: 'system-ui, sans-serif',\n    heading: 'system-ui, sans-serif',\n    mono: 'system-ui, sans-serif',\n  },\n  colors: {\n    ...theme.colors,\n    brand: {\n      900: '#1a365d',\n      800: '#153e75',\n      700: '#2a69ac',\n    },\n  },\n};\n\nexport default customTheme;","import React, {useContext} from 'react';\nimport {AppContext} from '../App';\nimport {\n  SET_SELECTED_MARKET,\n  SET_ALTS_CATEGORY,\n  SET_USD_CATEGORY,\n  SET_ORDER_BY,\n  SET_SHOWN_COLUMN,\n  SET_SEARCH_VALUE,\n} from '../widgetActions';\n\nimport {\n  Flex,\n  Button,\n  Icon,\n  Radio,\n  RadioGroup,\n  RadioButtonGroup,\n  Select,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  InputRightElement,\n} from '@chakra-ui/core';\n\nconst CustomRadio = React.forwardRef((props, ref) => {\n  const { isChecked, isDisabled, children, ...rest } = props;\n  return (\n    <Button\n      ref={ref}\n      variantColor={isChecked ? 'orange' : 'gray'}\n      aria-checked={isChecked}\n      role='radio'\n      cursor='pointer'\n      mt='12px'\n      isDisabled={isDisabled}\n      {...rest}\n    >\n      {children}\n    </Button>\n  );\n});\n\nconst CustomSelect = React.forwardRef((props, ref) => {\n  const { isDisabled, value, onChange, children, ...rest } = props;\n  return (\n    <Select\n      size='sm'  ml='5'\n      rounded='20px' variant='filled'\n      placeholder='ALL' w='100px'\n      backgroundColor='gray.700'\n      borderColor='gray.700'\n      color='white'\n      _active={{ bg: 'gray.700', color: 'white' }}\n      _hover={{ bg: 'gray.700', color: 'white' }}\n      _focus={{ bg: 'gray.700', color: 'white' }}\n      isDisabled={isDisabled}\n      value={value}\n      onChange={onChange}\n      {...rest}\n    >\n      {children}\n    </Select>\n  );\n});\n\nfunction Header() {\n  const { state, dispatch } = useContext(AppContext);\n  const {\n    selectedMarket,\n    altsCategory,\n    usdCategory,\n    showColumn,\n    orderBy,\n    searchValue,\n  } = state;\n  const altsCategoryValues = ['XRP', 'ETH', 'TRX'];\n  const usdCategoryValues = ['USDT', 'BUSD', 'TUSD', 'USDC', 'PAX', 'BKRW', 'EUR', 'IDRT', 'NGN', 'RUB', 'TRY', 'ZAR'];\n\n  const onMarketChanged = (event) => {\n    if (event !== selectedMarket) {\n      dispatch({ type: SET_SELECTED_MARKET, payload: event });\n      dispatch({ type: SET_ALTS_CATEGORY, payload: 'ALL' });\n      dispatch({ type: SET_USD_CATEGORY, payload: 'ALL' });\n    }\n  }\n\n  const onAltsCategoryChanged = (event) => {\n    event.persist();\n    dispatch({ type: SET_ALTS_CATEGORY, payload: event.target.value });\n  }\n\n  const onUsdCategoryChanged = (event) => {\n    event.persist();\n    dispatch({ type: SET_USD_CATEGORY, payload: event.target.value });\n  }\n\n  const onColumnChange = (event) => {\n    dispatch({ type: SET_SHOWN_COLUMN, payload: event.target.value });\n    if (['change', 'volume'].includes(orderBy)) {\n      dispatch({ type: SET_ORDER_BY, payload: orderBy === 'change' ? 'volume' : 'change' });\n    }\n  }\n\n  return (\n    <Flex flexDirection='row' alignItems='center' flexWrap='wrap'>\n      <RadioButtonGroup\n        value={selectedMarket}\n        onChange={onMarketChanged}\n        isInline\n        mr='12px'\n      >\n        <CustomRadio value='FAVOURITE'><Icon name='star' size='12px' /></CustomRadio>\n        <CustomRadio value='BNB'>BNB</CustomRadio>\n        <CustomRadio value='BTC'>BTC</CustomRadio>\n        <CustomRadio value='ALTS'>ALTS\n          <CustomSelect\n            isDisabled={selectedMarket !== 'ALTS'}\n            onChange={onAltsCategoryChanged}\n            value={altsCategory}\n          >\n            {\n              altsCategoryValues.map(el =>\n                <option key={`key-alts-category-${el}`} value={el}>{el}</option>\n              )\n            }\n          </CustomSelect>\n        </CustomRadio>\n        <CustomRadio value='USDⓈ'>USDⓈ\n          <CustomSelect\n            isDisabled={selectedMarket !== 'USDⓈ'}\n            onChange={onUsdCategoryChanged}\n            value={usdCategory}\n          >\n            {\n              usdCategoryValues.map(el =>\n                <option key={`key-usd-category-${el}`} value={el}>{el}</option>\n              )\n            }\n          </CustomSelect>\n        </CustomRadio>\n      </RadioButtonGroup>\n      <RadioGroup mt='12px'\n        value={showColumn}\n        onChange={onColumnChange}\n        isInline\n        mr='12px'\n      >\n        <Radio value='1' size='sm' variantColor='orange' fontFamily='body' borderColor='gray.700'>Change</Radio>\n        <Radio value='2' size='sm' variantColor='orange' fontFamily='body' borderColor='gray.700'>Volume</Radio>\n      </RadioGroup>\n      <InputGroup size='sm' mt='12px'>\n        <InputLeftElement children={<Icon size='16px' name='search' color='orange.300' />} />\n        <Input \n          value={searchValue}\n          onChange={e => dispatch({ type: SET_SEARCH_VALUE, payload: e.target.value })}\n          placeholder='ADA' textTransform='uppercase'\n          width='80px' variant='filled'\n          focusBorderColor='none' outline='none' border='none'\n          _active={{ bg: 'gray.100', color: 'gray.700' }}\n          _hover={{ bg: 'gray.100', color: 'gray.700' }}\n          _focus={{ bg: 'gray.100', color: 'gray.700' }}\n        />\n        <InputRightElement\n          children={<Icon name='close' color='gray.500' />}\n          cursor=\"pointer\"\n          onClick={() => dispatch({ type: SET_SEARCH_VALUE, payload: '' })}\n        />\n      </InputGroup>\n    </Flex>\n  );\n}\n\nexport default Header;","export const SET_PRODUCTS = 'SET_PRODUCTS';\nexport const UPDATE_PRODUCTS = 'UPDATE_PRODUCTS';\nexport const SET_SORTED_DATA = 'SET_SORTED_DATA';\nexport const WEBSOCKET_IS_ALIVE = 'WEBSOCKET_IS_ALIVE';\nexport const SET_SELECTED_MARKET = 'SET_SELECTED_MARKET';\nexport const SET_ALTS_CATEGORY = 'SET_ALTS_CATEGORY';\nexport const SET_USD_CATEGORY = 'SET_USD_CATEGORY';\nexport const SET_ORDER_BY = 'SET_ORDER_BY';\nexport const SET_ORDER_DIRECTION = 'SET_ORDER_DIRECTION';\nexport const SET_SHOWN_COLUMN = 'SET_SHOWN_COLUMN';\nexport const SET_SEARCH_VALUE = 'SET_SEARCH_VALUE';\nexport const TOGGLE_FAVOURITE = 'TOGGLE_FAVOURITE';","import React, {useContext} from 'react';\nimport {AppContext} from '../App';\nimport {\n  SET_ORDER_BY,\n  SET_ORDER_DIRECTION,\n  TOGGLE_FAVOURITE,\n} from '../widgetActions';\n\nimport {\n  SimpleGrid,\n  Stack,\n  Flex,\n  IconButton,\n  Text,\n  Divider,\n} from '@chakra-ui/core';\n\nconst CustomIconButton = React.forwardRef((props, ref) => {\n  const { value, ...rest } = props;\n  return (\n    <IconButton\n      ref={ref}\n      ml='1'\n      aria-label={value}\n      icon={`triangle-${value === 'asc' ? 'up' : 'down'}`}\n      variant='ghost'\n      size='sm'\n      border='none'\n      variantColor='orange'\n      isRound\n      cursor='pointer'\n      {...rest}\n    />\n  );\n});\n\nfunction Content() {\n  const { state, dispatch } = useContext(AppContext);\n  const {\n    filteredData,\n    favouriteList,\n    showColumn,\n    orderBy,\n    orderDirection,\n  } = state;\n\n  const handleChangeOrderBy = (value) => {\n    if (value !== orderBy) {\n      dispatch({ type: SET_ORDER_BY, payload: value });\n      dispatch({ type: SET_ORDER_DIRECTION, payload: 'asc' });\n    } else {\n      handleChangeOrderDirection();\n    }\n  }\n\n  const handleChangeOrderDirection = () => {\n    dispatch({ type: SET_ORDER_DIRECTION, payload: orderDirection === 'asc' ? 'desc' : 'asc' });\n  }\n\n  const handleAddToFavourite = (isFavourite, value) => {\n    dispatch({ type: TOGGLE_FAVOURITE, payload: {isFavourite, value} });\n  }\n\n  const renderLines = () => {\n    return filteredData.map((el, i) => {\n      const changeValue = (+el.o - +el.c).toFixed(8);\n      const isFavourite = favouriteList.find(fav => fav === el.s);\n      return (\n      <React.Fragment key={`key-row-${i}`}>\n        {i !== 0 && <Divider width='100%'  key={`key-divider-${i}`} borderColor='orange.200'/>}\n        <SimpleGrid key={`key-data-${i}`} columns={3} spacing={5} textAlign='center' alignItems='center'>\n          <Flex flexDirection='row' alignItems='center' my='1'>\n          <IconButton\n            ml='1'\n            aria-label='fav'\n            icon='star'\n            variant='outline'\n            size='sm'\n            border='none'\n            variantColor={isFavourite ? 'orange' : 'gray'}\n            _hover={{ color: 'gray.700' }}\n            isRound\n            cursor='pointer'\n            onClick={() => handleAddToFavourite(isFavourite, el.s)}\n          />\n            <Text fontSize='0.8em'>{el.b}/{el.q}</Text>\n          </Flex>\n          <Text my='1' fontSize='0.8em'>{el.c}</Text>\n          {showColumn === '1' &&\n            <Text my='1' fontSize='0.8em'\n              color={changeValue >= 0 ? 'green.400' : 'red.400'}\n            >\n              {changeValue}\n            </Text>\n          }\n          {showColumn === '2' && <Text my='1' fontSize='0.8em'>{(+el.qv).toFixed(0)}</Text>}\n        </SimpleGrid>\n      </React.Fragment>\n    )});\n  }\n\n  return (\n    <Stack mt='5'>\n      <SimpleGrid columns={3} spacing={5} bg='orange.100'>\n        <Flex flexDirection='row' alignItems='center' justifyContent='center' my='1' >\n          <Text cursor='pointer' onClick={() => handleChangeOrderBy('name')}>Pair</Text>\n          {orderBy === 'name' && <CustomIconButton value={orderDirection} onClick={handleChangeOrderDirection}/>}\n        </Flex>\n        <Flex flexDirection='row' alignItems='center' justifyContent='center' my='1' >\n          <Text cursor='pointer' onClick={() => handleChangeOrderBy('price')}>Last Price</Text>\n          {orderBy === 'price' && <CustomIconButton value={orderDirection} onClick={handleChangeOrderDirection}/>}\n        </Flex>\n        <Flex flexDirection='row' alignItems='center' justifyContent='center' my='1' >\n          <Text cursor='pointer'\n            onClick={() => handleChangeOrderBy(showColumn === '1' ? 'change' : 'volume')}\n          >\n            {showColumn === '1' ? 'Change' : 'Volume'}\n          </Text>\n          {['change', 'volume'].includes(orderBy) && <CustomIconButton value={orderDirection} onClick={handleChangeOrderDirection}/>}\n        </Flex>\n      </SimpleGrid>\n      {renderLines()}\n    </Stack>);\n}\n\nexport default Content;","import {\n  SET_PRODUCTS,\n  UPDATE_PRODUCTS,\n  SET_SORTED_DATA,\n  WEBSOCKET_IS_ALIVE,\n  SET_SELECTED_MARKET,\n  SET_ALTS_CATEGORY,\n  SET_USD_CATEGORY,\n  SET_ORDER_BY,\n  SET_ORDER_DIRECTION,\n  SET_SHOWN_COLUMN,\n  SET_SEARCH_VALUE,\n  TOGGLE_FAVOURITE,\n} from './widgetActions';\n\nconst initialState = {\n  products: undefined,\n  sortedData: [],\n  filteredData: [],\n  favouriteList: [],\n  selectedMarket: 'BTC',\n  altsCategory: 'ALL',\n  usdCategory: 'ALL',\n  showColumn: '2',\n  websocketIsAlive: false,\n  orderBy: 'name',\n  orderDirection: 'asc',\n  searchValue: '',\n};\n\nfunction widgetReducer(state, action) {\n  switch (action.type) {\n    case SET_PRODUCTS: {\n      return {\n        ...state,\n        products: action.payload,\n      };\n    }\n    case UPDATE_PRODUCTS: {\n      let incomingData = action.payload;\n        let newProducts = {...state.products};\n        for(let i = 0; i < incomingData.length; i++) {\n          let value = newProducts.data.find(el => el.s === incomingData[i].s);\n          if (value) {\n            value.qv = incomingData[i].q;\n            value.c = incomingData[i].c;\n            // value = {...value, ...inComingData[i]}; // fields are not the same, can't simple merge\n          }\n        }\n      return {\n        ...state,\n        products: newProducts,\n      };\n    }\n    case SET_SORTED_DATA: {\n      const {sortedData, filteredData } =\n        sortAndFilterData(action.payload, state.orderBy, state.orderDirection, state.searchValue);\n      return {\n        ...state,\n        sortedData,\n        filteredData,\n      };\n    }\n    case WEBSOCKET_IS_ALIVE: {\n      return {\n        ...state,\n        websocketIsAlive: action.payload,\n      };\n    }\n    case SET_SELECTED_MARKET: {\n      return {\n        ...state,\n        selectedMarket: action.payload,\n      };\n    }\n    case SET_ALTS_CATEGORY: {\n      return {\n        ...state,\n        altsCategory: action.payload,\n      };\n    }\n    case SET_USD_CATEGORY: {\n      return {\n        ...state,\n        usdCategory: action.payload,\n      };\n    }\n    case SET_ORDER_BY: {\n      const {sortedData, filteredData } =\n        sortAndFilterData(state.sortedData, action.payload, state.orderDirection, state.searchValue);\n      return {\n        ...state,\n        orderBy: action.payload,\n        sortedData,\n        filteredData,\n      };\n    }\n    case SET_ORDER_DIRECTION: {\n      const {sortedData, filteredData } =\n        sortAndFilterData(state.sortedData, state.orderBy, action.payload, state.searchValue);\n      return {\n        ...state,\n        orderDirection: action.payload,\n        sortedData,\n        filteredData,\n      };\n    }\n    case SET_SHOWN_COLUMN: {\n      return {\n        ...state,\n        showColumn: action.payload,\n      };\n    }\n    case SET_SEARCH_VALUE: {\n      const filteredData = filterData(state.sortedData, action.payload);\n      return {\n        ...state,\n        filteredData,\n        searchValue: action.payload,\n      };\n    }\n    case TOGGLE_FAVOURITE: {\n      let {isFavourite, value} = action.payload;\n      let favList = [...state.favouriteList];\n      if (isFavourite) {\n        favList = favList.filter(el => el !== value);\n      } else {\n        favList.push(value);\n      }\n      return {\n        ...state,\n        favouriteList: favList,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nconst sortAndFilterData = (data, orderBy, orderDirection, searchValue) => {\n  const sortedData = sortData(data, orderBy, orderDirection);\n  const filteredData = filterData(sortedData, searchValue);\n  return {sortedData, filteredData};\n}\n\nconst filterData = (array, searchValue) => {\n  const newArray = array.filter(el => el.b.toLowerCase().includes(searchValue.toLowerCase()));\n  return newArray;\n}\n\nconst sortData = (array, orderBy, orderDirection) => {\n  let newArray = [...array];\n  if (orderBy === 'name') {\n    newArray.sort((a, b) => {\n      if (orderDirection === 'asc') {\n        if (a.s < b.s) {\n          return -1;\n        }\n        if (a.s > b.s) {\n          return 1;\n        }\n      } else {\n        if (a.s > b.s) {\n          return -1;\n        }\n        if (a.s < b.s) {\n          return 1;\n        }\n      }\n      return 0;\n    });\n  }\n  if (orderBy === 'price') {\n    newArray.sort((a, b) => {\n      if (orderDirection === 'asc') {\n        return +a.c - +b.c;\n      } else {\n        return +b.c - +a.c;\n      }\n    });\n  }\n  if (orderBy === 'volume') {\n    newArray.sort((a, b) => {\n      if (orderDirection === 'asc') {\n        return +a.qv - +b.qv;\n      } else {\n        return +b.qv - +a.qv;\n      }\n    });\n  }\n  if (orderBy === 'change') {\n    newArray.sort((a, b) => {\n      const changeA = (+a.o - +a.c).toFixed(8);\n      const changeB = (+b.o - +b.c).toFixed(8);\n      if (orderDirection === 'asc') {\n        return changeA - changeB;\n      } else {\n        return changeB - changeA;\n      }\n    });\n  }\n  return newArray;\n}\n\nexport {initialState, widgetReducer};","import React, {useEffect, useRef, useReducer, createContext} from 'react';\nimport { ThemeProvider, Box, Heading, Button, Flex } from '@chakra-ui/core';\nimport customTheme from './customTheme';\nimport Header from './widget/Header';\nimport Content from './widget/Content';\nimport { default as mockData }  from './data.json';\nimport {initialState, widgetReducer} from './widgetReducer';\nimport {\n  SET_PRODUCTS,\n  UPDATE_PRODUCTS,\n  SET_SORTED_DATA,\n  WEBSOCKET_IS_ALIVE,\n} from './widgetActions';\n\nexport const AppContext = createContext();\n\nfunction App() {\n  const url = 'https://www.binance.com/exchange-api/v1/public/asset-service/product/get-products';\n  const wsUrl = 'wss://stream.binance.com/stream?streams=!miniTicker@arr';\n  const webSocket = useRef(null);\n\n  const [state, dispatch] = useReducer(widgetReducer, initialState);\n  const {\n    products,\n    favouriteList,\n    selectedMarket,\n    altsCategory,\n    usdCategory,\n    websocketIsAlive,\n  } = state;\n  \n  const connect = () => {\n    webSocket.current = new WebSocket(wsUrl);\n\n    webSocket.current.onopen = () => {\n      console.log('Connected websocket');\n      dispatch({ type: WEBSOCKET_IS_ALIVE, payload: true });\n    };\n\n    webSocket.current.onmessage = (message) => {\n      const {data} = JSON.parse(message.data);\n      dispatch({ type: UPDATE_PRODUCTS, payload: data });\n    };\n\n    webSocket.current.onclose = e => {\n      console.log('Socket is closed', e.reason);\n      dispatch({ type: WEBSOCKET_IS_ALIVE, payload: false });\n    };\n\n    webSocket.current.onerror = err => {\n      console.error(\n          'Socket encountered error: ',\n          err.message,\n          'Closing socket'\n      );\n      webSocket.current.close();\n      dispatch({ type: WEBSOCKET_IS_ALIVE, payload: false });\n    };\n  }\n\n  const closeWebSocket = () => {\n    if (webSocket !== null && webSocket.current !== null) {\n      webSocket.current.close();\n    }\n  }\n\n  const handleWebSocketButton = () => {\n    if (websocketIsAlive) {\n      closeWebSocket();\n    } else {\n      connect();\n    }\n  }\n\n  useEffect(() => {\n    const fetchData = () => {\n      fetch(url).then((res) => res.json)\n      .then(data => {\n        dispatch({ type: SET_PRODUCTS, payload: data });\n        connect();\n      })\n      // There is an error while loading on localhost because of CORS-policy, so getting data from mock\n      .catch(err => {\n        dispatch({ type: SET_PRODUCTS, payload: mockData });\n        connect();\n      });\n    }\n\n    fetchData();\n\n    return () => closeWebSocket();\n  }, []);\n\n  useEffect(() => {\n    const selectData = () => {\n      if (products === undefined) return;\n      let array =[];\n      if (selectedMarket === 'FAVOURITE') {\n        array = products.data.filter(el => favouriteList.includes(el.s));\n      } else if (altsCategory !== 'ALL' && altsCategory !== '' && usdCategory === 'ALL') {\n        array = products.data.filter(el => el.pm === selectedMarket && el.q === altsCategory);\n      } else if (usdCategory !== 'ALL' && usdCategory !== '' && altsCategory === 'ALL') {\n        array = products.data.filter(el => el.pm === selectedMarket && el.q === usdCategory);\n      } else {\n        array = products.data.filter(el => el.pm === selectedMarket);\n      }\n\n      dispatch({ type: SET_SORTED_DATA, payload: array });\n    }\n\n    selectData();\n  }, [products, selectedMarket, altsCategory, usdCategory, favouriteList]);\n\n  return (\n    <ThemeProvider theme={customTheme}>\n      <AppContext.Provider value={{ state, dispatch }}>\n      <Box mx='auto' width='90%'>\n        <Flex flexDirection='row' align='center' justifyContent='space-between'>\n          <Heading as='h1'>Market</Heading>\n          <Button\n            leftIcon='bell'\n            variantColor={ websocketIsAlive ? 'green' : 'red' }\n            onClick={handleWebSocketButton}\n          >{ websocketIsAlive ? 'Live' : 'Offline' }</Button>\n        </Flex>\n        <main>\n          <Header/>\n          <Content/>\n        </main>\n      </Box>\n      </AppContext.Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}